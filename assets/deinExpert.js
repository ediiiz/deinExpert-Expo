const deinExpertAgent64 = `var We=Object.defineProperty;var Fe=(t,e,n)=>e in t?We(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var T=(t,e,n)=>(Fe(t,typeof e!="symbol"?e+"":e,n),n);function E(){}const Ne=t=>t;function Ve(t){return!!t&&(typeof t=="object"||typeof t=="function")&&typeof t.then=="function"}function ze(t){return t()}function be(){return Object.create(null)}function V(t){t.forEach(ze)}function ue(t){return typeof t=="function"}function de(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function Be(t){return Object.keys(t).length===0}function Ye(t,...e){if(t==null){for(const r of e)r(void 0);return E}const n=t.subscribe(...e);return n.unsubscribe?()=>n.unsubscribe():n}function me(t,e,n){t.$$.on_destroy.push(Ye(e,n))}const De=typeof window<"u";let Je=De?()=>window.performance.now():()=>Date.now(),fe=De?t=>requestAnimationFrame(t):E;const K=new Set;function Ae(t){K.forEach(e=>{e.c(t)||(K.delete(e),e.f())}),K.size!==0&&fe(Ae)}function Ke(t){let e;return K.size===0&&fe(Ae),{promise:new Promise(n=>{K.add(e={c:t,f:n})}),abort(){K.delete(e)}}}function w(t,e){t.appendChild(e)}function je(t,e,n){const r=pe(t);if(!r.getElementById(e)){const i=v("style");i.id=e,i.textContent=n,Pe(r,i)}}function pe(t){if(!t)return document;const e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function Xe(t){const e=v("style");return e.textContent="/* empty */",Pe(pe(t),e),e.sheet}function Pe(t,e){return w(t.head||t,e),e.sheet}function x(t,e,n){t.insertBefore(e,n||null)}function k(t){t.parentNode&&t.parentNode.removeChild(t)}function v(t){return document.createElement(t)}function Ze(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function M(t){return document.createTextNode(t)}function A(){return M(" ")}function he(){return M("")}function oe(t,e,n,r){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n,r)}function _(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function Ge(t){return Array.from(t.childNodes)}function te(t,e){e=""+e,t.data!==e&&(t.data=e)}function _e(t,e,n,r){n==null?t.style.removeProperty(e):t.style.setProperty(e,n,r?"important":"")}function Qe(t,e,{bubbles:n=!1,cancelable:r=!1}={}){return new CustomEvent(t,{detail:e,bubbles:n,cancelable:r})}class et{constructor(e=!1){T(this,"is_svg",!1);T(this,"e");T(this,"n");T(this,"t");T(this,"a");this.is_svg=e,this.e=this.n=null}c(e){this.h(e)}m(e,n,r=null){this.e||(this.is_svg?this.e=Ze(n.nodeName):this.e=v(n.nodeType===11?"TEMPLATE":n.nodeName),this.t=n.tagName!=="TEMPLATE"?n:n.content,this.c(e)),this.i(r)}h(e){this.e.innerHTML=e,this.n=Array.from(this.e.nodeName==="TEMPLATE"?this.e.content.childNodes:this.e.childNodes)}i(e){for(let n=0;n<this.n.length;n+=1)x(this.t,this.n[n],e)}p(e){this.d(),this.h(e),this.i(this.a)}d(){this.n.forEach(k)}}const ne=new Map;let re=0;function tt(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function nt(t,e){const n={stylesheet:Xe(e),rules:{}};return ne.set(t,n),n}function ve(t,e,n,r,i,a,l,o=0){const s=16.666/r;let c=`{
`;for(let b=0;b<=1;b+=s){const m=e+(n-e)*a(b);c+=b*100+`%{${l(m,1-m)}}
`}const d=c+`100% {${l(n,1-n)}}
}`,f=`__svelte_${tt(d)}_${o}`,p=pe(t),{stylesheet:u,rules:g}=ne.get(p)||nt(p,t);g[f]||(g[f]=!0,u.insertRule(`@keyframes ${f} ${d}`,u.cssRules.length));const y=t.style.animation||"";return t.style.animation=`${y?`${y}, `:""}${f} ${r}ms linear ${i}ms 1 both`,re+=1,f}function rt(t,e){const n=(t.style.animation||"").split(", "),r=n.filter(e?a=>a.indexOf(e)<0:a=>a.indexOf("__svelte")===-1),i=n.length-r.length;i&&(t.style.animation=r.join(", "),re-=i,re||it())}function it(){fe(()=>{re||(ne.forEach(t=>{const{ownerNode:e}=t.stylesheet;e&&k(e)}),ne.clear())})}let G;function R(t){G=t}function qe(){if(!G)throw new Error("Function called outside component initialization");return G}function ot(t){qe().$$.on_destroy.push(t)}const J=[],we=[];let X=[];const ye=[],st=Promise.resolve();let ae=!1;function lt(){ae||(ae=!0,st.then(ge))}function q(t){X.push(t)}const se=new Set;let B=0;function ge(){if(B!==0)return;const t=G;do{try{for(;B<J.length;){const e=J[B];B++,R(e),at(e.$$)}}catch(e){throw J.length=0,B=0,e}for(R(null),J.length=0,B=0;we.length;)we.pop()();for(let e=0;e<X.length;e+=1){const n=X[e];se.has(n)||(se.add(n),n())}X.length=0}while(J.length);for(;ye.length;)ye.pop()();ae=!1,se.clear(),R(t)}function at(t){if(t.fragment!==null){t.update(),V(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(q)}}function ct(t){const e=[],n=[];X.forEach(r=>t.indexOf(r)===-1?e.push(r):n.push(r)),n.forEach(r=>r()),X=e}let Z;function ut(){return Z||(Z=Promise.resolve(),Z.then(()=>{Z=null})),Z}function le(t,e,n){t.dispatchEvent(Qe(`${e?"intro":"outro"}${n}`))}const ee=new Set;let H;function W(){H={r:0,c:[],p:H}}function F(){H.r||V(H.c),H=H.p}function $(t,e){t&&t.i&&(ee.delete(t),t.i(e))}function I(t,e,n,r){if(t&&t.o){if(ee.has(t))return;ee.add(t),H.c.push(()=>{ee.delete(t),r&&(n&&t.d(1),r())}),t.o(e)}else r&&r()}const dt={duration:0};function N(t,e,n,r){let a=e(t,n,{direction:"both"}),l=r?0:1,o=null,s=null,c=null,d;function f(){c&&rt(t,c)}function p(g,y){const b=g.b-l;return y*=Math.abs(b),{a:l,b:g.b,d:b,duration:y,start:g.start,end:g.start+y,group:g.group}}function u(g){const{delay:y=0,duration:b=300,easing:m=Ne,tick:L=E,css:D}=a||dt,U={start:Je()+y,b:g};g||(U.group=H,H.r+=1),"inert"in t&&(g?d!==void 0&&(t.inert=d):(d=t.inert,t.inert=!0)),o||s?s=U:(D&&(f(),c=ve(t,l,g,b,y,m,D)),g&&L(0,1),o=p(U,b),q(()=>le(t,g,"start")),Ke(h=>{if(s&&h>s.start&&(o=p(s,b),s=null,le(t,o.b,"start"),D&&(f(),c=ve(t,l,o.b,o.duration,0,m,a.css))),o){if(h>=o.end)L(l=o.b,1-l),le(t,o.b,"end"),s||(o.b?f():--o.group.r||V(o.group.c)),o=null;else if(h>=o.start){const S=h-o.start;l=o.a+o.d*m(S/o.duration),L(l,1-l)}}return!!(o||s)}))}return{run(g){ue(a)?ut().then(()=>{a=a({direction:g?"in":"out"}),u(g)}):u(g)},end(){f(),o=s=null}}}function ft(t,e){const n=e.token={};function r(i,a,l,o){if(e.token!==n)return;e.resolved=o;let s=e.ctx;l!==void 0&&(s=s.slice(),s[l]=o);const c=i&&(e.current=i)(s);let d=!1;e.block&&(e.blocks?e.blocks.forEach((f,p)=>{p!==a&&f&&(W(),I(f,1,1,()=>{e.blocks[p]===f&&(e.blocks[p]=null)}),F())}):e.block.d(1),c.c(),$(c,1),c.m(e.mount(),e.anchor),d=!0),e.block=c,e.blocks&&(e.blocks[a]=c),d&&ge()}if(Ve(t)){const i=qe();if(t.then(a=>{R(i),r(e.then,1,e.value,a),R(null)},a=>{if(R(i),r(e.catch,2,e.error,a),R(null),!e.hasCatch)throw a}),e.current!==e.pending)return r(e.pending,0),!0}else{if(e.current!==e.then)return r(e.then,1,e.value,t),!0;e.resolved=t}}function pt(t,e,n){const r=e.slice(),{resolved:i}=t;t.current===t.then&&(r[t.value]=i),t.current===t.catch&&(r[t.error]=i),t.block.p(r,n)}function ke(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function ht(t,e){I(t,1,1,()=>{e.delete(t.key)})}function gt(t,e,n,r,i,a,l,o,s,c,d,f){let p=t.length,u=a.length,g=p;const y={};for(;g--;)y[t[g].key]=g;const b=[],m=new Map,L=new Map,D=[];for(g=u;g--;){const C=f(i,a,g),j=n(C);let O=l.get(j);O?r&&D.push(()=>O.p(C,e)):(O=c(j,C),O.c()),m.set(j,b[g]=O),j in y&&L.set(j,Math.abs(g-y[j]))}const U=new Set,h=new Set;function S(C){$(C,1),C.m(o,d),l.set(C.key,C),d=C.first,u--}for(;p&&u;){const C=b[u-1],j=t[p-1],O=C.key,Q=j.key;C===j?(d=C.first,p--,u--):m.has(Q)?!l.has(O)||U.has(O)?S(C):h.has(Q)?p--:L.get(O)>L.get(Q)?(h.add(O),S(C)):(U.add(Q),p--):(s(j,l),p--)}for(;p--;){const C=t[p];m.has(C.key)||s(C,l)}for(;u;)S(b[u-1]);return V(D),b}function bt(t){t&&t.c()}function Le(t,e,n){const{fragment:r,after_update:i}=t.$$;r&&r.m(e,n),q(()=>{const a=t.$$.on_mount.map(ze).filter(ue);t.$$.on_destroy?t.$$.on_destroy.push(...a):V(a),t.$$.on_mount=[]}),i.forEach(q)}function Oe(t,e){const n=t.$$;n.fragment!==null&&(ct(n.after_update),V(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function mt(t,e){t.$$.dirty[0]===-1&&(J.push(t),lt(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function Ue(t,e,n,r,i,a,l,o=[-1]){const s=G;R(t);const c=t.$$={fragment:null,ctx:[],props:a,update:E,not_equal:i,bound:be(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(s?s.$$.context:[])),callbacks:be(),dirty:o,skip_bound:!1,root:e.target||s.$$.root};l&&l(c.root);let d=!1;if(c.ctx=n?n(t,e.props||{},(f,p,...u)=>{const g=u.length?u[0]:p;return c.ctx&&i(c.ctx[f],c.ctx[f]=g)&&(!c.skip_bound&&c.bound[f]&&c.bound[f](g),d&&mt(t,f)),p}):[],c.update(),d=!0,V(c.before_update),c.fragment=r?r(c.ctx):!1,e.target){if(e.hydrate){const f=Ge(e.target);c.fragment&&c.fragment.l(f),f.forEach(k)}else c.fragment&&c.fragment.c();e.intro&&$(t.$$.fragment),Le(t,e.target,e.anchor),ge()}R(s)}class Re{constructor(){T(this,"$$");T(this,"$$set")}$destroy(){Oe(this,1),this.$destroy=E}$on(e,n){if(!ue(n))return E;const r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(n),()=>{const i=r.indexOf(n);i!==-1&&r.splice(i,1)}}$set(e){this.$$set&&!Be(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const _t="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(_t);function z(t,{delay:e=0,duration:n=400,easing:r=Ne}={}){const i=+getComputedStyle(t).opacity;return{delay:e,duration:n,easing:r,css:a=>`opacity: ${a*i}`}}async function vt(){return fetch("https://www.expert.de/shop/api/storeFinder?maxResults=1000").then(t=>t.json())}const Y=[];function He(t,e=E){let n;const r=new Set;function i(o){if(de(t,o)&&(t=o,n)){const s=!Y.length;for(const c of r)c[1](),Y.push(c,t);if(s){for(let c=0;c<Y.length;c+=2)Y[c][0](Y[c+1]);Y.length=0}}}function a(o){i(o(t))}function l(o,s=E){const c=[o,s];return r.add(c),r.size===1&&(n=e(i,a)||E),o(t),()=>{r.delete(c),r.size===0&&n&&(n(),n=null)}}return{set:i,update:a,subscribe:l}}const wt="2079279f-840b-4f10-9dc0-0cee850b3eee",yt="bG9jYWxlPSZ1aWQ9NDc0MTkmc2VydmljZVByb3ZpZGVyPUFXSU5fQUxMX0RFJnNlcnZpY2VQcm92aWRlcklkPTMwMDA3JnRyYWNraW5nTGluaz0=";async function kt(){var c;const t=`https://api.link-o-mat.com/redirectWebsite.php?data=${yt}`,n={headers:{"X-Requested-With":"XMLHttpRequest","X-API-KEY":wt,"x-cors-headers":JSON.stringify({Referer:t,"Access-Control-Allow-Origin":"*"})},redirect:"follow",method:"POST"},r=async d=>await fetch(`https://cashback.dztf.workers.dev/?${d}`,n),i=await r(`${t}&ab=0`),a=await r(i.headers.get("location")),l=(c=new DOMParser().parseFromString(await a.text(),"text/html").querySelector("html body a"))==null?void 0:c.href;return(await r(l)).headers.get("location")}const xe="https://dein.expert/api/product",ce=He([]),P=He({current:0,total:0,status:"ready"});class xt{constructor(){T(this,"products",[]);T(this,"dataExpertStore",null);T(this,"reactiveDataExpertStores",null);T(this,"dataWebcode");T(this,"dataDesktop");T(this,"dataMobile");T(this,"fetchInterval",200);T(this,"abortController",null);T(this,"isSearchCancelled",!1);T(this,"unsubscribe");P.update(e=>({...e,status:"ready"})),this.unsubscribe=P.subscribe(e=>{e.status==="finished"&&this.uploadData()})}ngOnDestroy(){this.unsubscribe()}async checkIfProductAlreadySearched(){const e=await fetch(`${xe}/${this.Webcode}`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const n=await e.json();if(n.success){const r=new Date(n.product.priceHistory[0].date),i=new Date,a=Date.UTC(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate(),r.getUTCHours(),r.getUTCMinutes(),r.getUTCSeconds()),o=Date.UTC(i.getUTCFullYear(),i.getUTCMonth(),i.getUTCDate(),i.getUTCHours(),i.getUTCMinutes(),i.getUTCSeconds())-a;if(Math.floor(o/1e3/60)<10)return!0}return!1}get Webcode(){var e,n;return this.dataWebcode=(n=(e=document.querySelector("#__nuxt > main > div > div.lg\\:container.lg\\:mx-auto.flex.flex-col.gap-y-4 > div.grid.grid-cols-12.gap-4.lg\\:gap-12 > div.col-span-12.lg\\:col-span-9 > div"))==null?void 0:e.innerHTML)==null?void 0:n.replace("Web-Code: ",""),this.dataWebcode}async fetchData(){var e,n;try{const r=await this.checkIfProductAlreadySearched();if(r){P.update(i=>({...i,status:"error-searchTooFast"}));return}this.dataExpertStore=await vt().then(i=>{const a=new Set;return i.filter(l=>l.store.website&&!a.has(l.store.storeId)?(a.add(l.store.storeId),!0):!1)}),this.dataDesktop=(e=document.querySelector("#__nuxt > main > div > div.lg\\:container.lg\\:mx-auto.flex.flex-col.gap-y-4 > div.lg\\:grid.lg\\:grid-cols-12.lg\\:gap-12 > div.col-span-4.gap-y-4.flex.flex-col.article-pds-middle > a > div > div"))==null?void 0:e.getAttribute("data-bv-product-id"),this.dataMobile=(n=document.querySelector("#mobileVersion > div"))==null?void 0:n.getAttribute("data-bv-product-id"),(this.dataDesktop||this.dataMobile)&&!r?this.processData():(console.error("No product ID found on the website"),P.update(i=>({...i,status:"error-articleId"})),await this.sleep(2e3).then(()=>{P.update(i=>({...i,status:"ready"}))}))}catch(r){console.error("Error fetching data:",r)}}processData(){console.log("Processing data:",this.dataExpertStore),P.update(()=>({status:"processing",current:0,total:0})),this.processStores()}async processStores(){if(!this.dataExpertStore)return;P.update(n=>({...n,current:0,total:this.dataExpertStore.length,status:"processing"}));let e=!1;for(let n=0;n<this.dataExpertStore.length;n++){if(this.isSearchCancelled){e=!0;break}const r=this.dataExpertStore[n],i=r.store.storeId;if(await new Promise(a=>setTimeout(a,this.fetchInterval)),this.isSearchCancelled){e=!0;break}this.fetchProductInformation(i,r.store.name),P.update(a=>({...a,current:a.current+1}))}P.update(n=>({...n,status:e?"cancelled":"finished"}))}startNewSearch(){P.update(()=>({status:"ready",current:0,total:0})),this.products=[],ce.set(this.products),this.isSearchCancelled=!1,this.abortController=new AbortController,this.fetchData()}cancelSearch(){P.update(()=>({status:"cancelled",current:0,total:0})),this.isSearchCancelled=!0,this.abortController&&(this.abortController.abort(),this.abortController=null)}async fetchCashbackLink(){const e=await kt();if(e)return e}async fetchProductInformation(e,n){var r,i,a;this.abortController=new AbortController;try{const l=JSON.stringify({articleId:this.dataDesktop||this.dataMobile,store:e,cacheLevel:"MOST_RECENT"}),o=await fetch("https://www.expert.de/shop/api/neo/internal-pub-service/getArticleData",{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:l});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const s=await o.json();return!((r=s.price)!=null&&r.gross)||s.onlineButtonAction!=="ORDER"||(s.showStoreName=n,s.onlineStore=e,s.priceInclShipping=s.price.gross+((a=(i=s.onlineShipment[0])==null?void 0:i.price)==null?void 0:a.gross),!s.priceInclShipping)||(this.products.push(s),this.products.sort((c,d)=>c.priceInclShipping&&d.priceInclShipping?c.priceInclShipping-d.priceInclShipping:0),ce.set(this.products)),s}catch(l){console.error(`Error fetching product information for storeId ${e}:`,l);return}}async uploadData(){const e={webcode:this.Webcode,url:window.location.href.split("?")[0],price:[]};if(this.products.forEach(a=>{e.price.push({price:a.priceInclShipping,branchName:a.showStoreName,branchId:parseInt(a.onlineStore),aussteller:a.itemOnDisplay})}),e.price.length===0)return;const n=JSON.stringify(e),r=await fetch(xe,{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:n});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const i=await r.json();console.log(i),await this.sleep(2e3).then(()=>{P.update(a=>({...a,status:"processing"}))})}async sleep(e){return new Promise(n=>setTimeout(n,e))}}function St(t){je(t,"svelte-lhrdgv",".uno-2ayvsf{position:fixed;top:0.5rem;right:0.5rem;display:grid;align-items:center;justify-content:center;border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(248,113,113,var(--un-bg-opacity));padding:1rem;text-align:center}.uno-negnzd{position:fixed;top:0.5rem;right:0.5rem;display:grid;margin-bottom:0.5rem;align-items:center;justify-content:center;border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(74,222,128,var(--un-bg-opacity));padding:1rem;text-align:center}.uno-rzvmir{position:relative;top:0.125rem;z-index:11;display:grid;place-content:stretch;gap:0.5rem}.uno-tu1j78{position:relative;top:-0.125rem;z-index:11}.uno-x23ort{position:sticky;top:0;z-index:10;--un-bg-opacity:1;background-color:rgba(255,255,255,var(--un-bg-opacity))}.uno-5852ds{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));height:80%;overflow:auto;border-bottom-left-radius:0.5rem;border-bottom-right-radius:0.5rem;--un-shadow-inset:inset}.uno-hu8ee7{display:grid;align-items:center;justify-content:center;padding-top:1rem;text-align:center}.uno-ory23f{display:grid;margin-top:1rem;margin-bottom:1rem;align-items:center;justify-content:center;border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(248,113,113,var(--un-bg-opacity));padding:1rem;text-align:center}.uno-qpywei{display:grid;margin-top:1rem;margin-bottom:1rem;align-items:center;justify-content:center;border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(229,229,229,var(--un-bg-opacity));padding:1rem;text-align:center}.uno-hdojgs{height:0.25rem;width:100%;--un-bg-opacity:1;background-color:rgba(229,229,229,var(--un-bg-opacity))}.uno-mnhc7q{height:0;width:0}.uno-tfznrd{height:0.25rem}.uno-tl4qao{height:100%;animation:svelte-lhrdgv-bounce 1s linear infinite;animation-duration:1s;animation-iteration-count:infinite}.uno-emr5gg{border-radius:0.5rem;padding:1rem}.uno-zc5bq3{border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(34,34,34,var(--un-bg-opacity));padding:1rem;--un-text-opacity:1;color:rgba(255,255,255,var(--un-text-opacity));--un-shadow-opacity:1;--un-shadow-color:rgba(34,34,34,var(--un-shadow-opacity));--un-shadow:var(--un-shadow-inset) 0 25px 50px -12px var(--un-shadow-color, rgba(0,0,0,0.25));box-shadow:var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)}.uno-74jp26{border-top-left-radius:0.5rem;border-top-right-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(34,34,34,var(--un-bg-opacity));padding:1rem;--un-text-opacity:1;color:rgba(255,255,255,var(--un-text-opacity));--un-shadow-opacity:1;--un-shadow-color:rgba(34,34,34,var(--un-shadow-opacity));--un-shadow:var(--un-shadow-inset) 0 25px 50px -12px var(--un-shadow-color, rgba(0,0,0,0.25));box-shadow:var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)}.dark .uno-hdojgs{--un-bg-opacity:1;background-color:rgba(82,82,82,var(--un-bg-opacity))}.uno-butvv2{padding-bottom:1rem}@keyframes svelte-lhrdgv-bounce{0%,100%{transform:translateY(-25%);animation-timing-function:cubic-bezier(0.8,0,1,1)}50%{transform:translateY(0);animation-timing-function:cubic-bezier(0,0,0.2,1)}}.tw-container.svelte-lhrdgv>.svelte-lhrdgv{grid-area:1 / 1}#table-container.svelte-lhrdgv.svelte-lhrdgv{-moz-box-shadow:inset 0 -10px 10px -10px rgba(17, 17, 17, 0.322);-webkit-box-shadow:inset 0 -10px 10px -10px rgba(17, 17, 17, 0.322);box-shadow:inset 0 -10px 20px -10px rgba(17, 17, 17, 0.322)}th.svelte-lhrdgv.svelte-lhrdgv,td.svelte-lhrdgv.svelte-lhrdgv{padding:8px 12px;border:1px solid #ddd}th.svelte-lhrdgv.svelte-lhrdgv{background-color:#f2f2f2}")}function Se(t,e,n){const r=t.slice();return r[7]=e[n],r}function $e(t){let e,n,r,i,a,l={ctx:t,current:null,token:null,hasCatch:!1,pending:Et,then:Ct,catch:$t};return ft(t[3].sleep(2e3),l),{c(){e=v("div"),n=v("p"),n.textContent="Alle Expert Cookies zulassen!",r=A(),l.block.c(),_(e,"class","uno-2ayvsf")},m(o,s){x(o,e,s),w(e,n),w(e,r),l.block.m(e,l.anchor=null),l.mount=()=>e,l.anchor=null,a=!0},p(o,s){t=o,pt(l,t,s)},i(o){a||(o&&q(()=>{a&&(i||(i=N(e,z,{duration:500},!0)),i.run(1))}),a=!0)},o(o){o&&(i||(i=N(e,z,{duration:500},!1)),i.run(0)),a=!1},d(o){o&&k(e),l.block.d(),l.token=null,l=null,o&&i&&i.end()}}}function $t(t){return{c:E,m:E,p:E,d:E}}function Ct(t){let e,n,r;return{c(){e=v("button"),_(e,"class","uno-mnhc7q")},m(i,a){x(i,e,a),n||(r=oe(e,"click",window.Cookiebot.renew()),n=!0)},p:E,d(i){i&&k(e),n=!1,r()}}}function Et(t){return{c:E,m:E,p:E,d:E}}function Ce(t){let e,n,r;return{c(){e=v("div"),e.innerHTML="<p>Upload erfolgreich.</p>",_(e,"class","uno-negnzd")},m(i,a){x(i,e,a),r=!0},i(i){r||(i&&q(()=>{r&&(n||(n=N(e,z,{duration:500},!0)),n.run(1))}),r=!0)},o(i){i&&(n||(n=N(e,z,{duration:500},!1)),n.run(0)),r=!1},d(i){i&&k(e),i&&n&&n.end()}}}function Tt(t){let e,n,r,i,a;return{c(){e=v("button"),e.innerHTML='<div class="uno-tl4qao">Start</div>',_(e,"class","uno-zc5bq3 svelte-lhrdgv")},m(l,o){x(l,e,o),r=!0,i||(a=oe(e,"click",t[6]),i=!0)},p:E,i(l){r||(l&&q(()=>{r&&(n||(n=N(e,z,{duration:200},!0)),n.run(1))}),r=!0)},o(l){l&&(n||(n=N(e,z,{duration:200},!1)),n.run(0)),r=!1},d(l){l&&k(e),l&&n&&n.end(),i=!1,a()}}}function It(t){let e,n,r,i,a;return{c(){e=v("button"),e.textContent="Cancel",_(e,"class","uno-74jp26 svelte-lhrdgv")},m(l,o){x(l,e,o),r=!0,i||(a=oe(e,"click",t[5]),i=!0)},p:E,i(l){r||(l&&q(()=>{r&&(n||(n=N(e,z,{duration:200},!0)),n.run(1))}),r=!0)},o(l){l&&(n||(n=N(e,z,{duration:200},!1)),n.run(0)),r=!1},d(l){l&&k(e),l&&n&&n.end(),i=!1,a()}}}function Ee(t){let e,n,r;return{c(){e=v("div"),n=v("div"),r=v("div"),_(r,"class","uno-tfznrd bg-primary"),_e(r,"width",t[1].current/t[1].total*100+"%"),_(n,"class","uno-hdojgs"),_(e,"class","uno-tu1j78")},m(i,a){x(i,e,a),w(e,n),w(n,r)},p(i,a){a&2&&_e(r,"width",i[1].current/i[1].total*100+"%")},d(i){i&&k(e)}}}function Mt(t){let e,n,r,i,a,l,o=t[1].status!=="restarted"&&Te(t);return{c(){e=v("div"),n=v("table"),r=v("thead"),r.innerHTML='<tr><th class="uno-x23ort svelte-lhrdgv">Preis</th> <th class="uno-x23ort svelte-lhrdgv">Vsk.</th> <th class="uno-x23ort svelte-lhrdgv">Markt</th></tr>',i=A(),a=v("tbody"),o&&o.c(),_(e,"id","table-container"),_(e,"class","uno-5852ds svelte-lhrdgv")},m(s,c){x(s,e,c),w(e,n),w(n,r),w(n,i),w(n,a),o&&o.m(a,null),l=!0},p(s,c){s[1].status!=="restarted"?o?(o.p(s,c),c&2&&$(o,1)):(o=Te(s),o.c(),$(o,1),o.m(a,null)):o&&(W(),I(o,1,1,()=>{o=null}),F())},i(s){l||($(o),l=!0)},o(s){I(o),l=!1},d(s){s&&k(e),o&&o.d()}}}function Nt(t){let e,n,r,i,a="<strong>Aussteller</strong>",l,o,s,c;const d=[jt,At],f=[];function p(u,g){return u[1].status==="error-searchTooFast"?0:1}return s=p(t),c=f[s]=d[s](t),{c(){e=v("div"),n=v("p"),r=M("Orange markierte Einträge sind "),i=new et(!1),l=M("!"),o=A(),c.c(),i.a=l,_(n,"class","uno-emr5gg bg-primary"),_(e,"class","uno-hu8ee7")},m(u,g){x(u,e,g),w(e,n),w(n,r),i.m(a,n),w(n,l),w(e,o),f[s].m(e,null)},p(u,g){let y=s;s=p(u),s===y?f[s].p(u,g):(W(),I(f[y],1,1,()=>{f[y]=null}),F(),c=f[s],c?c.p(u,g):(c=f[s]=d[s](u),c.c()),$(c,1),c.m(e,null))},i(u){$(c)},o(u){I(c)},d(u){u&&k(e),f[s].d()}}}function Te(t){let e=[],n=new Map,r,i,a=ke(t[2]);const l=o=>o[7].onlineStore;for(let o=0;o<a.length;o+=1){let s=Se(t,a,o),c=l(s);n.set(c,e[o]=Ie(c,s))}return{c(){for(let o=0;o<e.length;o+=1)e[o].c();r=he()},m(o,s){for(let c=0;c<e.length;c+=1)e[c]&&e[c].m(o,s);x(o,r,s),i=!0},p(o,s){s&5&&(a=ke(o[2]),W(),e=gt(e,s,l,1,o,a,n,r.parentNode,ht,Ie,r,Se),F())},i(o){if(!i){for(let s=0;s<a.length;s+=1)$(e[s]);i=!0}},o(o){for(let s=0;s<e.length;s+=1)I(e[s]);i=!1},d(o){o&&k(r);for(let s=0;s<e.length;s+=1)e[s].d(o)}}}function zt(t){let e,n=(t[7].priceInclShipping||"N/A")+"",r,i,a,l,o=t[7].onlineShipment[0].price.gross+"",s,c,d,f,p,u,g,y;return{c(){e=v("td"),r=M(n),i=M("€ inkl. Vsk."),a=A(),l=v("td"),s=M(o),c=M("€"),d=A(),f=v("td"),p=v("button"),u=v("a"),g=M("Link"),_(e,"class","bg-primary svelte-lhrdgv"),_(l,"class","bg-primary svelte-lhrdgv"),_(u,"href",y=ie(t[0],t[7].onlineStore)),_(u,"target","_blank"),_(p,"class","uno-zc5bq3"),_(f,"class","bg-primary svelte-lhrdgv")},m(b,m){x(b,e,m),w(e,r),w(e,i),x(b,a,m),x(b,l,m),w(l,s),w(l,c),x(b,d,m),x(b,f,m),w(f,p),w(p,u),w(u,g)},p(b,m){m&4&&n!==(n=(b[7].priceInclShipping||"N/A")+"")&&te(r,n),m&4&&o!==(o=b[7].onlineShipment[0].price.gross+"")&&te(s,o),m&5&&y!==(y=ie(b[0],b[7].onlineStore))&&_(u,"href",y)},d(b){b&&(k(e),k(a),k(l),k(d),k(f))}}}function Dt(t){let e,n=(t[7].priceInclShipping||"N/A")+"",r,i,a,l,o=t[7].onlineShipment[0].price.gross+"",s,c,d,f,p,u,g,y;return{c(){e=v("td"),r=M(n),i=M("€ inkl. Vsk."),a=A(),l=v("td"),s=M(o),c=M("€"),d=A(),f=v("td"),p=v("button"),u=v("a"),g=M("Link"),_(e,"class","svelte-lhrdgv"),_(l,"class","svelte-lhrdgv"),_(u,"href",y=ie(t[0],t[7].onlineStore)),_(u,"target","_blank"),_(p,"class","uno-zc5bq3"),_(f,"class","svelte-lhrdgv")},m(b,m){x(b,e,m),w(e,r),w(e,i),x(b,a,m),x(b,l,m),w(l,s),w(l,c),x(b,d,m),x(b,f,m),w(f,p),w(p,u),w(u,g)},p(b,m){m&4&&n!==(n=(b[7].priceInclShipping||"N/A")+"")&&te(r,n),m&4&&o!==(o=b[7].onlineShipment[0].price.gross+"")&&te(s,o),m&5&&y!==(y=ie(b[0],b[7].onlineStore))&&_(u,"href",y)},d(b){b&&(k(e),k(a),k(l),k(d),k(f))}}}function Ie(t,e){let n,r,i,a;function l(c,d){return c[7].itemOnDisplay===!1?Dt:zt}let o=l(e),s=o(e);return{key:t,first:null,c(){n=v("tr"),s.c(),r=A(),this.first=n},m(c,d){x(c,n,d),s.m(n,null),w(n,r),a=!0},p(c,d){e=c,o===(o=l(e))&&s?s.p(e,d):(s.d(1),s=o(e),s&&(s.c(),s.m(n,r)))},i(c){a||(c&&q(()=>{a&&(i||(i=N(n,z,{duration:200},!0)),i.run(1))}),a=!0)},o(c){c&&(i||(i=N(n,z,{duration:200},!1)),i.run(0)),a=!1},d(c){c&&k(n),s.d(),c&&i&&i.end()}}}function At(t){let e,n,r,i,a,l,o;return{c(){e=v("div"),n=v("p"),n.textContent="Sobald die Suche abgeschlossen ist kannst du die Preise hier finden:",r=A(),i=v("a"),a=M("Link zum Produkt"),_(n,"class","uno-butvv2"),_(i,"class","uno-zc5bq3"),_(i,"href","https://dein.Expert/product/"+t[3].Webcode),_(i,"target","_blank"),_(e,"class","uno-qpywei")},m(s,c){x(s,e,c),w(e,n),w(e,r),w(e,i),w(i,a),o=!0},p:E,i(s){o||(s&&q(()=>{o&&(l||(l=N(e,z,{duration:500},!0)),l.run(1))}),o=!0)},o(s){s&&(l||(l=N(e,z,{duration:500},!1)),l.run(0)),o=!1},d(s){s&&k(e),s&&l&&l.end()}}}function jt(t){let e,n,r,i,a,l,o;return{c(){e=v("div"),n=v("p"),n.textContent="In den letzten 10 Minuten wurde dieser Artikel bereits von jemanden gesucht.",r=A(),i=v("a"),a=M("Link zum Suchergebniss"),_(n,"class","uno-butvv2"),_(i,"class","uno-zc5bq3"),_(i,"href","https://dein.Expert/product/"+t[3].Webcode),_(i,"target","_blank"),_(e,"class","uno-ory23f")},m(s,c){x(s,e,c),w(e,n),w(e,r),w(e,i),w(i,a),o=!0},p:E,i(s){o||(s&&q(()=>{o&&(l||(l=N(e,z,{duration:500},!0)),l.run(1))}),o=!0)},o(s){s&&(l||(l=N(e,z,{duration:500},!1)),l.run(0)),o=!1},d(s){s&&k(e),s&&l&&l.end()}}}function Pt(t){let e,n,r,i,a,l,o,s,c,d,f,p=t[1].status==="error-articleId"&&$e(t),u=t[1].status==="finished"&&Ce();const g=[It,Tt],y=[];function b(h,S){return h[1].status==="processing"?0:1}i=b(t),a=y[i]=g[i](t);let m=t[1].status==="processing"&&t[1].total!==0&&Ee(t);const L=[Nt,Mt],D=[];function U(h,S){return h[1].status==="ready"||h[1].status==="error-articleId"||h[1].status==="error-searchTooFast"?0:1}return s=U(t),c=D[s]=L[s](t),{c(){p&&p.c(),e=A(),u&&u.c(),n=A(),r=v("div"),a.c(),l=A(),m&&m.c(),o=A(),c.c(),d=he(),_(r,"class","uno-rzvmir tw-container svelte-lhrdgv")},m(h,S){p&&p.m(h,S),x(h,e,S),u&&u.m(h,S),x(h,n,S),x(h,r,S),y[i].m(r,null),x(h,l,S),m&&m.m(h,S),x(h,o,S),D[s].m(h,S),x(h,d,S),f=!0},p(h,[S]){h[1].status==="error-articleId"?p?(p.p(h,S),S&2&&$(p,1)):(p=$e(h),p.c(),$(p,1),p.m(e.parentNode,e)):p&&(W(),I(p,1,1,()=>{p=null}),F()),h[1].status==="finished"?u?S&2&&$(u,1):(u=Ce(),u.c(),$(u,1),u.m(n.parentNode,n)):u&&(W(),I(u,1,1,()=>{u=null}),F());let C=i;i=b(h),i===C?y[i].p(h,S):(W(),I(y[C],1,1,()=>{y[C]=null}),F(),a=y[i],a?a.p(h,S):(a=y[i]=g[i](h),a.c()),$(a,1),a.m(r,null)),h[1].status==="processing"&&h[1].total!==0?m?m.p(h,S):(m=Ee(h),m.c(),m.m(o.parentNode,o)):m&&(m.d(1),m=null);let j=s;s=U(h),s===j?D[s].p(h,S):(W(),I(D[j],1,1,()=>{D[j]=null}),F(),c=D[s],c?c.p(h,S):(c=D[s]=L[s](h),c.c()),$(c,1),c.m(d.parentNode,d))},i(h){f||($(p),$(u),$(a),$(c),f=!0)},o(h){I(p),I(u),I(a),I(c),f=!1},d(h){h&&(k(e),k(n),k(r),k(l),k(o),k(d)),p&&p.d(h),u&&u.d(h),y[i].d(),m&&m.d(h),D[s].d(h)}}}function ie(t,e){const n=window.location.href.split("?");return`${t}&p=`+encodeURIComponent(`${n[0]}?branch_id=e_${e}`)}function qt(t,e,n){let r,i;me(t,P,d=>n(1,r=d)),me(t,ce,d=>n(2,i=d));let a="";const l=new xt;async function o(){n(0,a=await l.fetchCashbackLink()),a&&l.startNewSearch()}return ot(()=>{l.ngOnDestroy()}),[a,r,i,l,o,()=>l.cancelSearch(),async()=>o()]}class Lt extends Re{constructor(e){super(),Ue(this,e,qt,Pt,de,{},St)}}function Ot(t){je(t,"svelte-syprrh",`.uno-8n23h5{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 2048 2048' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='currentColor' d='M128 768V640h1792v128H128zm0-640h1792v128H128V128zm0 1152v-128h1792v128H128zm0 512v-128h1792v128H128z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;font-size:1.5rem;line-height:2rem}.uno-96jopq{position:fixed;top:5rem;right:0;z-index:9999;height:500px;width:100vw;border-width:2px;border-radius:0.5rem;--un-bg-opacity:1;background-color:rgba(255,255,255,var(--un-bg-opacity));padding:1rem;--un-text-opacity:1;color:rgba(0,0,0,var(--un-text-opacity))}.uno-jbk4lp{position:fixed;bottom:1rem;left:0;z-index:9999;width:100vw;--un-text-opacity:1;color:rgba(255,255,255,var(--un-text-opacity))}.uno-qmxv15{display:flex;place-content:center}.uno-lkkdrc{border-radius:1rem;--un-bg-opacity:1;background-color:rgba(34,34,34,var(--un-bg-opacity));padding:1rem;--un-shadow-opacity:1;--un-shadow-color:rgba(34,34,34,var(--un-shadow-opacity));--un-shadow:var(--un-shadow-inset) 0 25px 50px -12px var(--un-shadow-color, rgba(0,0,0,0.25));box-shadow:var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)}@media(min-width: 640px){.uno-96jopq{right:1.5rem;max-width:24rem}}@media(min-width: 768px){.uno-96jopq{max-width:28rem}}`)}function Me(t){let e,n,r,i,a;return r=new Lt({}),{c(){e=v("div"),n=v("div"),bt(r.$$.fragment),_(n,"class","uno-96jopq 3xl:max-w-2xl")},m(l,o){x(l,e,o),w(e,n),Le(r,n,null),a=!0},i(l){a||($(r.$$.fragment,l),l&&q(()=>{a&&(i||(i=N(e,z,{duration:200},!0)),i.run(1))}),a=!0)},o(l){I(r.$$.fragment,l),l&&(i||(i=N(e,z,{duration:200},!1)),i.run(0)),a=!1},d(l){l&&k(e),Oe(r),l&&i&&i.end()}}}function Ut(t){let e,n,r,i,a,l,o,s,c=t[0]=="open"&&Me();return{c(){e=v("div"),n=v("div"),r=v("button"),r.innerHTML='<div class="uno-8n23h5"></div>',i=A(),c&&c.c(),a=he(),_(r,"class","uno-lkkdrc"),_(n,"class","uno-qmxv15"),_(e,"class","uno-jbk4lp")},m(d,f){x(d,e,f),w(e,n),w(n,r),x(d,i,f),c&&c.m(d,f),x(d,a,f),l=!0,o||(s=oe(r,"click",t[1]),o=!0)},p(d,[f]){d[0]=="open"?c?f&1&&$(c,1):(c=Me(),c.c(),$(c,1),c.m(a.parentNode,a)):c&&(W(),I(c,1,1,()=>{c=null}),F())},i(d){l||($(c),l=!0)},o(d){I(c),l=!1},d(d){d&&(k(e),k(i),k(a)),c&&c.d(d),o=!1,s()}}}function Rt(t,e,n){function r(){i=="open"?n(0,i="close"):n(0,i="open")}let i="close";return[i,r]}class Ht extends Re{constructor(e){super(),Ue(this,e,Rt,Ut,de,{},Ot)}}new Ht({target:document.body});`

export default deinExpertAgent64;